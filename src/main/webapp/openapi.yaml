openapi: 3.0.0

info:
  version: '1.0'
  title: Trops API
  description: L'interfaccia per il progetto "Trops" sviluppata dal gruppo Hoolibo (gruppo 3). Le sezioni contrassegnate con \[WIP\] sono da completare.

servers:
  - url: https://api.le0nardo.dev/trops
  - url: http://localhost:8080/api_war_exploded

tags:
  - name: Accounts
    description: Gli endpoint responsabili per la gestione degli account
  - name: Events
    description: Gli endpoint responsabili per la gestione degli eventi
  - name: Places
    description: \[WIP\] Gli endpoint responsabili per la gestione dei luoghi per gli eventi
  - name: Sports
    description: \[WIP\] Gli endpoint responsabili per la gestione delle discipline ammesse negli eventi

externalDocs:
  description: Qu√¨ trovi la repository con il codice sorgente.
  url: https://github.com/le0flo/trops

paths:
  /account/register:
    put:
      summary: Registra un account
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-user-register'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /account/login:
    post:
      summary: Ottieni il token di sessione con le credenziali
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-user-login'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /account/session/deactivate:
    delete:
      summary: Disattiva un token di sessione
      tags:
        - Accounts
      security:
        - SessionToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-user-disconnect'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /events/create:
    put:
      summary: Crea un evento
      tags:
        - Events
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-event-create'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /events/list:
    get:
      summary: Ottieni la lista di tutti gli eventi disponibili
      tags:
        - Events
      security:
        - SessionToken: [ ]
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /events/list/filtered:
    get:
      summary: Ottieni la lista di alcuni tra gli eventi disponibili
      description: \[WIP\]
      tags:
        - Events
      security:
        - SessionToken: [ ]
      parameters:
        - in: path
          name: tipo
          schema:
            type: string
            example: SCO
          required: false
          description: Tipologia degli eventi (scolastici o extra scolastici)
        - in: path
          name: sport
          schema:
            type: string
            example: basket
          required: false
          description: Lo sport dell'evento (basket, calcio, pallavolo)
        - in: path
          name: datamin
          schema:
            type: string
            example: 2024-5-16
          required: false
          description: La data minima degli eventi
        - in: path
          name: datamax
          schema:
            type: string
            example: 2024-5-16
          required: false
          description: La data massima degli eventi
        - in: path
          name: partecipanti
          schema:
            type: integer
            example: 0
          required: false
          description: Il numero attuale di partecipanti
        - in: path
          name: maxpartecipanti
          schema:
            type: integer
            example: 10
          required: false
          description: Il numero massimo di partecipanti dell'evento
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /events/update:
    post:
      summary: Aggiorna un evento
      description: \[WIP\]
      tags:
        - Events
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-event-update'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /events/delete:
    delete:
      summary: Elimina un evento
      tags:
        - Events
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-event-delete'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /events/subscribe:
    post:
      summary: Iscriviti ad un evento
      tags:
        - Events
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-event-subscribe'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /events/unsubscribe:
    post:
      summary: Disiscriviti da un evento
      tags:
        - Events
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-event-unsubscribe'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /places/create:
    put:
      summary: Registra un luogo
      tags:
        - Places
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-place-create'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /places/list:
    get:
      summary: Ottieni la lista di tutti i luoghi disponibili
      tags:
        - Places
      security:
        - SessionToken: [ ]
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /places/list/filtered:
    get:
      summary: Ottieni la lista di alcuni tra i luoghi disponibili
      description: \[WIP\]
      tags:
        - Places
      security:
        - SessionToken: [ ]
      parameters:
        - in: path
          name: cap
          schema:
            type: string
            example: 40037
          required: false
          description: Cap del luogo
        - in: path
          name: citta
          schema:
            type: string
            example: Bologna
          required: false
          description: La citt√† del luogo in questione
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /places/update:
    post:
      summary: Aggiorna un luogo
      description: \[WIP\]
      tags:
        - Places
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-place-update'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /sports/create:
    put:
      summary: Registra uno sport
      tags:
        - Sports
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-sport-create'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /sports/list:
    get:
      summary: Ottieni la lista di tutti gli sport disponibili
      tags:
        - Sports
      security:
        - SessionToken: [ ]
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

  /sports/update:
    post:
      summary: Aggiorna uno sport
      description: \[WIP\]
      tags:
        - Sports
      security:
        - SessionToken: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/form-sport-update'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success-response'
        '500':
          description: Fallimento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failure-response'

components:
  securitySchemes:
    SessionToken:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    success-response:
      type: object
      properties:
        esito:
          type: string
          example: successo
        codice:
          type: integer
          example: 0
        risultato:
          type: object
    failure-response:
      type: object
      properties:
        esito:
          type: string
          example: fallito
        codice:
          type: integer
        motivazione:
          type: string

    form-user-register:
      type: object
      required:
        - email
        - password
        - nome
        - cognome
        - data_nascita
        - cod_fis
      properties:
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: Ciao1234!
        nome:
          type: string
          example: Mario
        cognome:
          type: string
          example: Rossi
        data_nascita:
          type: string
          example: 2001-9-11
        cod_fis:
          type: string
          example: SPANDR05L06F839I
    form-user-login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: Ciao1234!
        session:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
    form-user-disconnect:
      type: object
      required:
        - deactivated-session
      properties:
        deactivated-session:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000

    form-event-create:
      type: object
      required:
        - tipo
        - sport_uuid
        - place_uuid
        - data
        - max_partecipanti
        - titolo
      properties:
        tipo:
          type: string
          example: SCO
        sport_uuid:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
        place_uuid:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
        data:
          type: string
          example: 2024-7-16 10:00:00
        max_partecipanti:
          type: string
          example: 10
        titolo:
          type: string
          example: Torneo di basket
        descrizione:
          type: string
          example: Example event
    form-event-update:
      type: object
    form-event-delete:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
    form-event-subscribe:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
    form-event-unsubscribe:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000

    form-place-create:
      type: object
      required:
        - cap
        - citta
        - indirizzo
        - civico
      properties:
        cap:
          type: string
          example: 40037
        citta:
          type: string
          example: Sasso Marconi
        indirizzo:
          type: string
          example: Via Ca' De Testi
        civico:
          type: string
          example: 16/2
    form-place-update:
      type: object

    form-sport-create:
      type: object
      required:
        - nome
      properties:
        nome:
          type: string
          example: Calcio
    form-sport-update:
      type: object